Ne kadar calisacaðý belli olmayan olan donguler

//Donguler

//for, while
//once sart, sonra islem
//do-while
//once islem sonra sart
//sarta kadar en az 1 kere çalışır...

//foreach: en farklı olan dongu
//Koleksiyonlar uzerinde calisir...
//Readonly dir...

//break:donguden çıkmak için kullanılır...
//gordugu anda donguyu bitirir...

do {
    //
    //
    break;
    Console.WriteLine("islem");

}while(true);

//break, continue kullanımı...

for (int i = 0; i < 10; i++)
{
    if (i == 5 || i==6) continue;
    Console.WriteLine(i);
}

//continue:sadece o adımı iptal eder...

//goto: Moduler programlamaya uygun bir kullanım değildir...
//Assembly




//Döngüler ile özel durumlar...
//for: Genellikle ne kadar çalışacağı belli olan dongulerde kullanılır...

//for (; ; )
//{
//    Console.WriteLine("merhaba");
//}


//while dongusu NSA ne kadar calisacağı belli olmayan dongulerde kullanılır...Bura ise ne kadar calisacağı belli olan dongu şeklinde kullanılmıştır... 
int sayac = 0;
while (sayac < 5)
{ 
   Console.WriteLine(sayac);
    sayac++;
}




//Soru:Kullanıcı negatif sayi girmedigi muddetce girilen sayıları toplayan kodu yazınız?
int toplam = 0;

int sayi = 0;

while (sayi >= 0)
{
    Console.WriteLine("sayi giriniz");
    sayi = int.Parse(Console.ReadLine());
    if(sayi>0)
    toplam += sayi;
}

Console.WriteLine("Toplam=" + toplam);
